#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –ø—Ä–æ–µ–∫—Ç–æ–≤
"""

import sys
import os
from pathlib import Path
from PIL import Image, ImageDraw, ImageFont
import random

# –î–æ–±–∞–≤–ª—è–µ–º –∫–æ—Ä–Ω–µ–≤—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(str(Path(__file__).parent.parent))

from sqlalchemy.orm import Session
from core.database import SessionLocal
from models.project import Project, ProjectImage

def create_placeholder_image(width: int, height: int, text: str, filename: str):
    """–°–æ–∑–¥–∞–µ—Ç placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å —Ç–µ–∫—Å—Ç–æ–º"""
    
    # –°–ª—É—á–∞–π–Ω—ã–µ —Ü–≤–µ—Ç–∞ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
    colors = [
        '#3B82F6',  # Blue
        '#10B981',  # Green
        '#F59E0B',  # Yellow
        '#EF4444',  # Red
        '#8B5CF6',  # Purple
        '#06B6D4',  # Cyan
        '#F97316',  # Orange
        '#84CC16',  # Lime
    ]
    
    bg_color = random.choice(colors)
    
    # –°–æ–∑–¥–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image = Image.new('RGB', (width, height), bg_color)
    draw = ImageDraw.Draw(image)
    
    # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å —à—Ä–∏—Ñ—Ç
    try:
        font = ImageFont.truetype("/System/Library/Fonts/Arial.ttf", 24)
    except:
        try:
            font = ImageFont.truetype("/usr/share/fonts/truetype/dejavu/DejaVuSans.ttf", 24)
        except:
            font = ImageFont.load_default()
    
    # –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —Ç–µ–∫—Å—Ç–∞
    bbox = draw.textbbox((0, 0), text, font=font)
    text_width = bbox[2] - bbox[0]
    text_height = bbox[3] - bbox[1]
    
    # –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç
    x = (width - text_width) // 2
    y = (height - text_height) // 2
    
    # –†–∏—Å—É–µ–º —Ç–µ–∫—Å—Ç
    draw.text((x, y), text, fill='white', font=font)
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    image.save(filename, 'JPEG', quality=85)
    print(f"‚úì –°–æ–∑–¥–∞–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ: {filename}")

def create_placeholder_images():
    """–°–æ–∑–¥–∞–µ—Ç placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤"""
    
    db: Session = SessionLocal()
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –ø—Ä–æ–µ–∫—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏
        projects = db.query(Project).all()
        
        if not projects:
            print("‚ùå –ü—Ä–æ–µ–∫—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
        
        # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
        images_dir = Path("static/images")
        images_dir.mkdir(parents=True, exist_ok=True)
        
        print(f"üé® –°–æ–∑–¥–∞–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è {len(projects)} –ø—Ä–æ–µ–∫—Ç–æ–≤...")
        
        for project in projects:
            print(f"\nüìÅ –ü—Ä–æ–µ–∫—Ç: {project.title}")
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞
            project_images = db.query(ProjectImage).filter(
                ProjectImage.project_id == project.id
            ).all()
            
            for i, img in enumerate(project_images):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º –∏–º—è —Ñ–∞–π–ª–∞ –∏–∑ –ø—É—Ç–∏
                image_path = Path(img.image_path)
                filename = image_path.name
                
                # –°–æ–∑–¥–∞–µ–º –ø–æ–ª–Ω—ã–π –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
                full_path = images_dir / filename
                
                # –°–æ–∑–¥–∞–µ–º placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                if i == 0:
                    # –û—Å–Ω–æ–≤–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ - –±–æ–ª—å—à–µ
                    create_placeholder_image(
                        800, 600, 
                        f"{project.title}\n#{project.category}", 
                        str(full_path)
                    )
                else:
                    # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                    create_placeholder_image(
                        600, 400, 
                        f"{project.title}\n–í–∏–¥ {i+1}", 
                        str(full_path)
                    )
        
        print(f"\nüéâ –ì–æ—Ç–æ–≤–æ! –°–æ–∑–¥–∞–Ω–æ placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –¥–ª—è –≤—Å–µ—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: {e}")
        raise
    finally:
        db.close()

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–æ–∑–¥–∞–Ω–∏—è placeholder –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ª–∏ Pillow
    try:
        import PIL
        print("‚úì Pillow –Ω–∞–π–¥–µ–Ω")
    except ImportError:
        print("‚ùå Pillow –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ–≥–æ –∫–æ–º–∞–Ω–¥–æ–π: pip install Pillow")
        sys.exit(1)
    
    create_placeholder_images()
    print("‚úÖ –ì–æ—Ç–æ–≤–æ!")