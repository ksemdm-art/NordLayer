name: Deploy to Production

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to server
      run: |
        # Sync files to server
        rsync -avz --delete \
          --exclude '.git' \
          --exclude 'node_modules' \
          --exclude '.env' \
          ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/opt/printing-platform/
        
        # Execute deployment commands on server
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd /opt/printing-platform
          
          # Setup environment
          if [ ! -f .env ]; then
            cp .env.production.template .env
            
            # Generate secure passwords
            SECRET_KEY=$(openssl rand -hex 32)
            DB_PASSWORD=$(openssl rand -base64 16 | tr -d "=+/" | cut -c1-16)
            
            # Update .env file
            sed -i "s/your_secure_password_here/$DB_PASSWORD/" .env
            sed -i "s/your_very_secure_secret_key_here_min_32_chars/$SECRET_KEY/" .env
            sed -i "s/yourdomain.com/nordlayer.ru/g" .env
            sed -i "s/your_telegram_bot_token_here/8316701600:AAGGhAE_2j7_3jCGJvWcLVIJ1ce247dim8g/" .env
            sed -i "s/123456789,987654321/692854890/" .env
          fi
          
          # Deploy with Docker Compose
          sudo docker-compose -f docker-compose.prod.yml down || true
          sudo docker-compose -f docker-compose.prod.yml up -d --build
          
          # Wait and check status
          sleep 30
          sudo docker-compose -f docker-compose.prod.yml ps
        EOF
    
    - name: Verify deployment
      run: |
        sleep 60
        # Check if containers are running
        RUNNING=$(ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "sudo docker-compose -f /opt/printing-platform/docker-compose.prod.yml ps -q | wc -l")
        if [ "$RUNNING" -gt "0" ]; then
          echo "✅ Deployment successful! $RUNNING containers running"
        else
          echo "❌ Deployment failed! No containers running"
          exit 1
        fi